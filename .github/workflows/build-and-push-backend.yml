# .github/workflows/build-and-push-backend.yml
name: Build and Push Backend to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'apps/server/**/*'
      - '.github/workflows/build-and-push-backend.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'nx.json'
      - 'tsconfig.base.json'
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: autonote/server # Define repository here as it's not a secret
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f apps/server/Dockerfile .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f apps/server/Dockerfile .
          
          # Push the tagged images to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest 